#@(#) Makefile started by makeout(1) 2020-07-05 22:13:24
# generated by:   ... John S. Urban
NULL=

TESTPROGFILES = ../test/main.f90 \
$(NULL)

PROGFILES = \
 ../test/demos/str/str.f90 \
 ../test/demos/assert/assert.f90 \
 ../test/demos/fstop/fstop.f90 \
 ../test/demos/M_verify/M_verify.f90 \
 ../test/demos/pdec/pdec.f90 \
 ../test/demos/stderr/stderr.f90 \
 ../test/demos/unit_check/unit_check.f90 \
 ../test/demos/unit_check_bad/unit_check_bad.f90 \
 ../test/demos/unit_check_done/unit_check_done.f90 \
 ../test/demos/unit_check_good/unit_check_good.f90 \
 ../test/demos/unit_check_msg/unit_check_msg.f90 \
 ../test/demos/unit_check_start/unit_check_start.f90 \
 ../test/demos/journal/journal.f90 \
 ../test/demos/M_journal/M_journal.f90 \
$(NULL)

CPROGFILES = 
PROG = ${PROGFILES:.f90=}
CPROG = ${CPROGFILES:.c=}
TPROG = ${TESTPROGFILES:.f90=}
SRCS =  M_msg.f90 M_journal.f90 M_verify.f90
OBJS =  M_msg.o M_journal.o M_verify.o
LIBRARY = libM_msg.a
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := -L. -lM_msg
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O -fPIC \
  -Wall -Wextra -Wimplicit-interface -fmax-errors=1 -fbounds-check -fcheck-array-temporaries\
  -march=native -ffast-math -funroll-loops\
  -fbacktrace
LDFLAGS := 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#all: $(OBJS) $(LIBRARY) $(PROGFILES) $(TESTPROGFILES) $(PROG)
all: $(LIBRARY) $(PROG) $(CPROG)
	: That is all Folks!
$(PROG): $(OBJS)
	-$(FC) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)||echo "ouch: $@.f90 "
$(PROGFILES): $(LIBRARY)
	-$(FC) $(LDFLAGS) $@ -o $* $(LIBS)
	: $*
$(TESTPROGFILES): $(LIBRARY)
	-$(FC) $(LDFLAGS) $@ -o $* $(LIBS)
	: $*
$(LIBRARY): $(OBJS)
	$(AR) $(ARFLAGS) $@ $^
.SUFFIXES: $(SUFFIXES) .f90 .F90 
.f90.o:
	$(FC) $(FFLAGS) -c $<
.F90.o:
	$(FC) $(FFLAGS) -c $<
#=================================================================================
M_verify.o: M_journal.o M_msg.o 
M_journal.o: M_msg.o 
#=================================================================================
clean:
	-rm -f $(PROG) $(CPROG) $(OBJS) *.mod $(LIBRARY)
	-rm -f mytrail.txt trail
#=================================================================================
.PHONY: help
help:
	: make    '-- build M_time module'
	: run     '-- run manpage demo programs and test program'
	: test    '-- run test program'
	: man     '-- show all manpages as text'
	: clean   '-- clean directory of object files and executables'
	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'
#=================================================================================
.PHONY: run
run: $(PROG) $(CPROG)
	# run everything
	echo $? |xargs -n 1|xargs -iXX env XX
#=================================================================================
.PHONY: test
test: $(TPROG)
	# run everything
	echo $? |xargs -n 1|xargs -iXX env XX
#=================================================================================
.PHONY: man
man:
	@test -d ../man  || ( echo 'manpages must be expanded into ../man'; exit)
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANWIDTH=80 MANPATH=../man MANWIDTH=80  man --regex '.*'|col -b
#=================================================================================
.PHONY: doxygen
doxygen: 
	doxygen dox.in
#=================================================================================
